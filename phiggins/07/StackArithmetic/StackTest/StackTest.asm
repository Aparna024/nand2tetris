// Parser::PushConstant push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// Parser::PushConstant push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// Parser::ConditionOp eq
@SP
M=M-1
@SP
A=M
D=M
@R15
M=D
@SP
M=M-1
@SP
A=M
D=M
@R15
D=D-M
@EQ.0
D;JEQ
@SP
A=M
D=0
@EQend.0
0;JMP
(EQ.0)
@SP
A=M
D=-1
(EQend.0)
@SP
A=M
M=D
@SP
M=M+1
// Parser::PushConstant push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// Parser::PushConstant push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// Parser::ConditionOp eq
@SP
M=M-1
@SP
A=M
D=M
@R15
M=D
@SP
M=M-1
@SP
A=M
D=M
@R15
D=D-M
@EQ.1
D;JEQ
@SP
A=M
D=0
@EQend.1
0;JMP
(EQ.1)
@SP
A=M
D=-1
(EQend.1)
@SP
A=M
M=D
@SP
M=M+1
// Parser::PushConstant push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// Parser::PushConstant push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// Parser::ConditionOp eq
@SP
M=M-1
@SP
A=M
D=M
@R15
M=D
@SP
M=M-1
@SP
A=M
D=M
@R15
D=D-M
@EQ.2
D;JEQ
@SP
A=M
D=0
@EQend.2
0;JMP
(EQ.2)
@SP
A=M
D=-1
(EQend.2)
@SP
A=M
M=D
@SP
M=M+1
// Parser::PushConstant push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// Parser::PushConstant push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// Parser::ConditionOp lt
@SP
M=M-1
@SP
A=M
D=M
@R15
M=D
@SP
M=M-1
@SP
A=M
D=M
@R15
D=D-M
@LT.3
D;JLT
@SP
A=M
D=0
@LTend.3
0;JMP
(LT.3)
@SP
A=M
D=-1
(LTend.3)
@SP
A=M
M=D
@SP
M=M+1
// Parser::PushConstant push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// Parser::PushConstant push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// Parser::ConditionOp lt
@SP
M=M-1
@SP
A=M
D=M
@R15
M=D
@SP
M=M-1
@SP
A=M
D=M
@R15
D=D-M
@LT.4
D;JLT
@SP
A=M
D=0
@LTend.4
0;JMP
(LT.4)
@SP
A=M
D=-1
(LTend.4)
@SP
A=M
M=D
@SP
M=M+1
// Parser::PushConstant push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// Parser::PushConstant push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// Parser::ConditionOp lt
@SP
M=M-1
@SP
A=M
D=M
@R15
M=D
@SP
M=M-1
@SP
A=M
D=M
@R15
D=D-M
@LT.5
D;JLT
@SP
A=M
D=0
@LTend.5
0;JMP
(LT.5)
@SP
A=M
D=-1
(LTend.5)
@SP
A=M
M=D
@SP
M=M+1
// Parser::PushConstant push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// Parser::PushConstant push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// Parser::ConditionOp gt
@SP
M=M-1
@SP
A=M
D=M
@R15
M=D
@SP
M=M-1
@SP
A=M
D=M
@R15
D=D-M
@GT.6
D;JGT
@SP
A=M
D=0
@GTend.6
0;JMP
(GT.6)
@SP
A=M
D=-1
(GTend.6)
@SP
A=M
M=D
@SP
M=M+1
// Parser::PushConstant push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// Parser::PushConstant push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// Parser::ConditionOp gt
@SP
M=M-1
@SP
A=M
D=M
@R15
M=D
@SP
M=M-1
@SP
A=M
D=M
@R15
D=D-M
@GT.7
D;JGT
@SP
A=M
D=0
@GTend.7
0;JMP
(GT.7)
@SP
A=M
D=-1
(GTend.7)
@SP
A=M
M=D
@SP
M=M+1
// Parser::PushConstant push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// Parser::PushConstant push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// Parser::ConditionOp gt
@SP
M=M-1
@SP
A=M
D=M
@R15
M=D
@SP
M=M-1
@SP
A=M
D=M
@R15
D=D-M
@GT.8
D;JGT
@SP
A=M
D=0
@GTend.8
0;JMP
(GT.8)
@SP
A=M
D=-1
(GTend.8)
@SP
A=M
M=D
@SP
M=M+1
// Parser::PushConstant push constant 57
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
// Parser::PushConstant push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
// Parser::PushConstant push constant 53
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
// Parser::BinaryOp add
@SP
M=M-1
@SP
A=M
D=M
@R15
M=D
@SP
M=M-1
@SP
A=M
D=M
@R15
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// Parser::PushConstant push constant 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
// Parser::BinaryOp sub
@SP
M=M-1
@SP
A=M
D=M
@R15
M=D
@SP
M=M-1
@SP
A=M
D=M
@R15
D=D-M
@SP
A=M
M=D
@SP
M=M+1
// Parser::UnaryOp neg
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
D=-M
@SP
A=M
M=D
@SP
M=M+1
// Parser::BinaryOp and
@SP
M=M-1
@SP
A=M
D=M
@R15
M=D
@SP
M=M-1
@SP
A=M
D=M
@R15
D=D&M
@SP
A=M
M=D
@SP
M=M+1
// Parser::PushConstant push constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
// Parser::BinaryOp or
@SP
M=M-1
@SP
A=M
D=M
@R15
M=D
@SP
M=M-1
@SP
A=M
D=M
@R15
D=D|M
@SP
A=M
M=D
@SP
M=M+1
// Parser::UnaryOp not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
D=!M
@SP
A=M
M=D
@SP
M=M+1
