class Game {
  field Array board;
  field int size;
  field Array text_x;
  field Array text_y;

  constructor Game new() {
    var Array row;
    var int i, j, x, y;
    var Box b;

    let size = 4;
    let board = Array.new(size);

    let text_x = Array.new(size);
    let text_x[0] = 3;
    let text_x[1] = 8;
    let text_x[2] = 14;
    let text_x[3] = 19;

    let text_y = Array.new(size);
    let text_y[0] = 3;
    let text_y[1] = 10;
    let text_y[2] = 17;
    let text_y[3] = 25;

    let i = 0;
    while (i < size) {
      let row = Array.new(size);
      let y = (10 * (i+1)) + (i * 50);

      let j = 0;
      while (j < size) {
        let x = (10 * (j+1)) + (j * 50);
        let b = Box.new(x, y, text_x[i], text_y[j]);
        //do b.setPower((i*4) + j);
        do b.setPower(1);
        let row[j] = b;

        let j = j + 1;
      }

      let board[i] = row;
      let i = i + 1;
    }

    return this;
  }

  method void draw() {
    var Array row;
    var int i, j;
    var Box b;

    let i = 0;
    while (i < size) {
      let j = 0;
      while (j < size) {
        let row = board[i];
        let b = row[j];
        do b.draw();

        let j = j + 1;
      }

      let i = i + 1;
    }

    return;
  }

  method boolean lost() {
    return false;
  }

  method boolean won() {
    return false;
  }

  method void moveLeft() {
    var Array r, temp;
    var int i, j;
    var Box b;
    var Row row;

    do Main.debug("Left");

    let r = Array.new(size);

    let j = 0;
    while (j < size) {
      let i = 0;
      while (i < size) {
        let temp = board[i];
        let b = temp[j];

        let r[i] = b;

        let i = i + 1;
      }

      let row = Row.new(r, size);
      do row.combine();

      let j = j + 1;
    }

    return;
  }

  method void moveUp() {
    var Array row;
    var int i, j;
    var Box b, next;

    do Main.debug("Up");

    let i = 0;
    while (i < size) {
      let j = 0;
      while (j < size) {
        let row = board[i];
        let b = row[j];

        do Output.printInt(b.getPower());
        /*
        let row = board[i+1];
        let next = row[j];
        */

        let j = j + 1;
      }

      let i = i + 1;
    }

    return;
  }

  method void moveRight() {
    var Array row;
    var int i, j;
    var Box b, next;

    do Main.debug("Right");

    let j = size - 1 ;
    while (j > -1) {
      let i = 0;
      while (i < size) {
        /*
        do Output.printInt(i);
        do Output.printString(",");
        do Output.printInt(j);
        do Output.println();
        */

        let row = board[i];
        let b = row[j];

        do Output.printInt(b.getPower());
        /*
        let row = board[i+1];
        let next = row[j];
        */

        let i = i + 1;
      }

      let j = j - 1;
    }

    return;
  }

  method void moveDown() {
    var Array row;
    var int i, j;
    var Box b, next;

    do Main.debug("Down");

    let i = size - 1;
    while (i > -1) {
      let j = 0 ;
      while (j < size) {
        /*
        do Output.printInt(i);
        do Output.printString(",");
        do Output.printInt(j);
        do Output.println();
        */

        let row = board[i];
        let b = row[j];

        do Output.printInt(b.getPower());
        /*
        let row = board[i+1];
        let next = row[j];
        */

        let j = j + 1;
      }

      let i = i - 1;
    }

    return;
  }

  method void move() {
    var char key;

    let key = 0;

    while (~key) {
      let key = Keyboard.readChar();

      if (key = 130) {
        do moveLeft();
      }
      if (key = 131) {
        do moveUp();
      }
      if (key = 132) {
        do moveRight();
      }
      if (key = 133) {
        do moveDown();
      }

      if (key & (key < 130 | key > 133)) {
        let key = 0;
      }
    }

    return;
  }

  method void start() {
    do Main.debug("Press an arrow key to start.");
    while(true) {
      do draw();
      do move();

      if (won()) {
        do Main.debug("You win!");
        return;
      }
      if (lost()) {
        do Main.debug("You lost. :(");
        return;
      }
    }

    return;
  }
}
