// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:

    DMux8Way(in=load, sel=address, 
             a=load0, b=load1, c=load2, d=load3,
             e=load4, f=load5, g=load6, h=load7);

    Register(in=in, load=load0, out=w0);
    Register(in=in, load=load1, out=w1);
    Register(in=in, load=load2, out=w2);
    Register(in=in, load=load3, out=w3);
    Register(in=in, load=load4, out=w4);
    Register(in=in, load=load5, out=w5);
    Register(in=in, load=load6, out=w6);
    Register(in=in, load=load7, out=w7);

    Mux4Way16(a=w0, b=w1, c=w2, d=w3, sel=address[0..1], out=w8);
    Mux4Way16(a=w4, b=w5, c=w6, d=w7, sel=address[0..1], out=w9);
    Mux16(a=w8, b=w9, sel=address[2], out=out);
}