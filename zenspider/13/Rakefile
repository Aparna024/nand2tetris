file "vm2.rb"

rule ".vm" => ".jack" do |t|
  sh "./jack.rkt #{t.source} > #{t.name}"
end

rule ".asm" => ".vm" do |t|
  sh "./vm.rkt #{t.source} > #{t.name}"
end

rule ".hack" => ".asm" do |t|
  sh "./asm.rkt #{t.source} > #{t.name}"
end

def wire base
  file "#{base}.vm" => [ "Rakefile", "#{base}.jack", "jack.rkt"]
  file "#{base}.asm" => ["#{base}.vm", "vm.rkt"]
  file "#{base}.hack" => ["#{base}.asm", "asm.rkt"]

  output = ["#{base}.vm", "#{base}.asm", "#{base}.hack"]

  task :default => output

  task :clean do
    rm_f output
  end
end

wire "os/Array"
wire "os/Keyboard"
wire "os/Math"
wire "os/Memory"
wire "os/Output"
wire "os/Screen"
wire "os/String"
wire "os/Sys"

wire "grid/Grid"
wire "grid/Main"
wire "grid/MathX"
wire "grid/Pew"
wire "grid/Ship"
wire "grid/Trig"
