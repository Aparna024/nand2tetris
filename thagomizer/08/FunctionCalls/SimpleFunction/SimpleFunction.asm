// function SimpleFunction.test 2
(SimpleFunction.test)
@2		 // 0
D=A		 // 1
@R13		 // 2
M=D		 // 3
@ONWARD0002		 // 4
D;JLE		 // 5
(LOOP0001)
@0		 // 6
D=A		 // 7
@SP		 // 8
A=M		 // 9
M=D		 // 10
@SP		 // 11
M=M+1		 // 12
@R13		 // 13
MD=M-1		 // 14
@LOOP0001		 // 15
D;JGT		 // 16
(ONWARD0002)
// push local 0
@0		 // 17
D=A		 // 18
@LCL		 // 19
A=M+D		 // 20
D=M		 // 21
@SP		 // 22
A=M		 // 23
M=D		 // 24
@SP		 // 25
M=M+1		 // 26
// push local 1
@1		 // 27
D=A		 // 28
@LCL		 // 29
A=M+D		 // 30
D=M		 // 31
@SP		 // 32
A=M		 // 33
M=D		 // 34
@SP		 // 35
M=M+1		 // 36
// add
@SP		 // 37
AM=M-1		 // 38
D=M		 // 39
@SP		 // 40
AM=M-1		 // 41
A=M		 // 42
D=A+D		 // 43
@SP		 // 44
A=M		 // 45
M=D		 // 46
@SP		 // 47
M=M+1		 // 48
// not
@SP		 // 49
A=M-1		 // 50
M=!M		 // 51
// push argument 0
@0		 // 52
D=A		 // 53
@ARG		 // 54
A=M+D		 // 55
D=M		 // 56
@SP		 // 57
A=M		 // 58
M=D		 // 59
@SP		 // 60
M=M+1		 // 61
// add
@SP		 // 62
AM=M-1		 // 63
D=M		 // 64
@SP		 // 65
AM=M-1		 // 66
A=M		 // 67
D=A+D		 // 68
@SP		 // 69
A=M		 // 70
M=D		 // 71
@SP		 // 72
M=M+1		 // 73
// push argument 1
@1		 // 74
D=A		 // 75
@ARG		 // 76
A=M+D		 // 77
D=M		 // 78
@SP		 // 79
A=M		 // 80
M=D		 // 81
@SP		 // 82
M=M+1		 // 83
// sub
@SP		 // 84
AM=M-1		 // 85
D=M		 // 86
@SP		 // 87
AM=M-1		 // 88
A=M		 // 89
D=A-D		 // 90
@SP		 // 91
A=M		 // 92
M=D		 // 93
@SP		 // 94
M=M+1		 // 95
// return
@LCL		 // 96
D=M		 // 97
@LCL		 // 98
D=M		 // 99
@R14		 // 100
M=D		 // 101
@5		 // 102
AD=D-A		 // 103
D=M		 // 104
@R15		 // 105
M=D		 // 106
@SP		 // 107
AM=M-1		 // 108
D=M		 // 109
@ARG		 // 110
A=M		 // 111
M=D		 // 112
@ARG		 // 113
D=M+1		 // 114
@SP		 // 115
M=D		 // 116
@R14		 // 117
AMD=M-1		 // 118
D=M		 // 119
@THAT		 // 120
M=D		 // 121
@R14		 // 122
AMD=M-1		 // 123
D=M		 // 124
@THIS		 // 125
M=D		 // 126
@R14		 // 127
AMD=M-1		 // 128
D=M		 // 129
@ARG		 // 130
M=D		 // 131
@R14		 // 132
AMD=M-1		 // 133
D=M		 // 134
@LCL		 // 135
M=D		 // 136
@R15		 // 137
A=M		 // 138
0;JMP		 // 139
