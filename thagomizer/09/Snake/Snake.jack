class Snake {

  // Statics
  static int _segment_size;
  static int _speed;

  // Fields 
  field Point _head;
  field Array _snake;
  field boolean _alive;
  field int _direction; // 1 - up, 2 - down, 3 - left, 4 - right


  // Global Init
  function void init() {
    let _segment_size = 30;
    let _speed = 2;
    return;
  }

  // Constructor & Dispose
  constructor Snake new(point head_location) {
    let _head = head_location;
    let _alive = true;
    let _snake = Array.new(2);
    let _snake[0] = _head;

    do draw();

    return this;
  }
  
  method void dispose() {
    do _snake.dispose();
    do Memory.deAlloc(this);
    return;
  }

  // Instance Methods
  method void set_direction(int direction) {
    let _direction = direction;
    return;
  }

  method void update() {
    if (_direction) {
      do erase();
    }

    // up
    if (_direction = 1) {
      do _head.move_y((-1) * _speed);
    }

    // down
    if (_direction = 2) {
      do _head.move_y(_speed);
    }

    // left
    if (_direction = 3) {
      do _head.move_x((-1) * _speed);
    }

    // right
    if (_direction = 4) {
      do _head.move_x(_speed);
    }

    if (_head.get_y() < 1) {
      let _alive = false;
    }
    if ((_head.get_y() + _segment_size) > (255 - _speed)) {
      let _alive = false;
    }
    if (_head.get_x() < 1) {
      let _alive = false;
    }
    if ((_head.get_x() + _segment_size) > (511 - _speed)) {
      let _alive = false;
    }

    do draw();
        
    do Sys.wait(5);

    return;
  }

  method void erase() { 
    do Screen.setColor(false); // white
    do _head.draw(_segment_size);

    return;
  }

  method void draw() { 
    do Screen.setColor(true); // black
    do _head.draw(_segment_size);

    return;
  }

  method boolean is_dead() {
    return ~_alive;
  }

  method void debug() {
    do _head.debug();
    return;
  }
}
